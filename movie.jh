application {
    config {
        applicationType monolith
        authenticationType	jwt
        databaseType	sql
        devDatabaseType	postgresql
        enableHibernateCache	true
        enableSwaggerCodegen	true
        enableTranslation	false
        jhiPrefix	movie
        languages	[vi]
        messageBroker	false
        nativeLanguage	vi
        prodDatabaseType postgresql
        searchEngine false
        skipClient true
        cacheProvider redis
    }
    entities *
    dto *  with mapstruct
    service * with serviceClass
    paginate * with pagination
}
entity User {
  username String,
  passwordHash String,
  firstName String,
  lastName String,
  email String,
  activated Boolean,
  langKey String,
  imageUrl String,
  activationKey String,
  resetKey String,
  resetDate Instant
}
entity Premium {
  startDate Instant,
  endDate Instant
}

entity Payment {
  paymentTime Long,
  paymentPrice Long,
  paymentMethod String
}

entity Movie {
  name String,
  originName String,
  isCompleted Boolean,
  slug String,
  episodeCurrent String,
  episodeTotal Integer,
  quality String,
  year Integer,
  trailerUrl String,
  time String,
  content String,
  isSingle Boolean,
  thumbUrl String,
  posterUrl String,
  actor String,
  country String,
  premiumOnly Boolean
}

entity Genres {
  genres String
}

entity MovieGenres {
}

entity MovieResource {
  part Integer,
  linkEmbed String,
  linkM3u8 String
}

entity History {
  part Integer,
  stopTime Integer
}

entity Playlist {
}


relationship ManyToOne {
  Premium{user(id)} to User,
  Payment{user(id)} to User,
  History{user(id)} to User,
  Playlist{user(id)} to User,
  MovieResource{movie(id)} to Movie,
  MovieGenres{movie(id)} to Movie,
  MovieGenres{genres(id)} to Genres,
  History{movie(id)} to Movie,
  Playlist{movie(id)} to Movie
}

paginate Premium, Payment, Movie, Genres, MovieGenres, MovieResource, History, Playlist with pagination

application {
    config {
        applicationType monolith
        authenticationType jwt
        databaseType sql
        devDatabaseType postgresql
        enableHibernateCache true
        enableSwaggerCodegen true
        enableTranslation false
        jhiPrefix movie
        languages [vi]
        messageBroker false
        nativeLanguage vi
        prodDatabaseType postgresql
        searchEngine false
        skipClient true
        cacheProvider redis
    }
    entities *
    dto * with mapstruct
    service * with serviceClass
    paginate * with pagination
}

entity Premium {
  startTime ZonedDateTime required,
  endTime ZonedDateTime required
}

entity Payment {
  paymentTime Long required,
  paymentPrice Long required,
  paymentMethod String required,
  status String required,
  transactionId String required
}

entity Movie {
  name String required,
  originName String required,
  isCompleted Boolean required,
  slug String required,
  episodeCurrent String required,
  episodeTotal Integer required,
  quality String required,
  year Integer required,
  trailerUrl String,
  time String,
  content String,
  isSingle Boolean required,
  thumbUrl String,
  posterUrl String,
  actors String,
  country String,
  premiumOnly Boolean required
}

entity Genres {
  genres String required
}

entity MovieResource {
  part Integer required,
  linkEmbed String required,
  linkM3u8 String required
}

entity History {
  part Integer required,
  stopTime Integer required
}

entity Playlist {
}

relationship ManyToMany {
  Movie{genres(id)} to Genres{movie}
}

relationship ManyToOne {
  Premium{user(id)} to User with builtInEntity,
  Payment{user(id)} to User with builtInEntity,
  History{user(id)} to User with builtInEntity,
  Playlist{user(id)} to User with builtInEntity,
  MovieResource{movie(id)} to Movie,
  History{movie(id)} to Movie,
  Playlist{movie(id)} to Movie
}
